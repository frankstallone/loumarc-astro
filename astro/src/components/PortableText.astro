---
import { urlForImage } from '../api/urlForImage';
import { toHTML } from '@portabletext/to-html';

const { portableText } = Astro.props;

// This will console correctly for all headings
// Example: <h2 id="6e3d31305fd8">1. Simulated Products: Affordable Alternatives</h2>
portableText.map((item) => {
  if (item._type === 'block' && /^h\d/.test(item.style)) {
    console.log(
      `<${item.style} id="${item._key}">${item.children[0].text}</${item.style}>`
    );
  }
});

const components = {
  types: {
    image: ({ value }) => {
      return `
		<picture>
          <source
            srcset="${urlForImage(value.asset)
              .width(900)
              .format('webp')
              .quality(90)
              .url()}"
            type="image/webp"
            class="h-auto"
          />
          <img
            class="responsive__img"
            src="${urlForImage(value.asset)
              .width(900)
              .format('jpg')
              .quality(90)
              .url()}"
            alt="${value.alt}"
            class="h-auto"
          />
        </picture>
      `;
    },
    block: ({ value }) => {
      const { node, children } = value;
      const { style, _key } = node;
      if (/^h\d/.test(style)) {
        return `<${style} id="${_key}">${children}</${style}>`;
      }
    },
  },
};
---

<Fragment set:html={toHTML(portableText, { components: components })} />
