---
import { urlForImage } from '../api/urlForImage';
import { toHTML } from '@portabletext/to-html';
import { idsForHeadings } from '../utils';

const { portableText } = Astro.props;

const components = {
  types: {
    image: ({ value }) => {
      return `
		<picture>
          <source
            srcset="${urlForImage(value.asset)
              .width(900)
              .format('webp')
              .quality(90)
              .url()}"
            type="image/webp"
            class="h-auto"
          />
          <img
            class="responsive__img"
            src="${urlForImage(value.asset)
              .width(900)
              .format('jpg')
              .quality(90)
              .url()}"
            alt="${value.alt}"
            class="h-auto"
          />
        </picture>
      `;
    },
  },
  block: {
    h1: ({ value }) => {
      const { children } = value;
      const content = children[0].text;
      return idsForHeadings({ content, htmlTag: 'h1' });
    },
    h2: ({ value }) => {
      const { children } = value;
      const content = children[0].text;
      return idsForHeadings({ content, htmlTag: 'h2' });
    },
    h3: ({ value }) => {
      const { children } = value;
      const content = children[0].text;
      return idsForHeadings({ content, htmlTag: 'h3' });
    },
  },
};
---

<Fragment set:html={toHTML(portableText, { components: components })} />
