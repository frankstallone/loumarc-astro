---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import PortableText from '../../components/PortableText.astro';
import FormBuilder from '../../components/FormBuilder.astro';
import { getVanityURL } from '../../utils/index';

import { sanityClient } from 'sanity:client';

export async function getStaticPaths() {
  const products = await sanityClient.fetch(`*[_type == "product"]`);

  return products.map((product) => {
    return {
      params: {
        slug: product.slug?.current || '',
      },
      props: { ...product },
    };
  });
}

const { title, body, gallery, slug, metaDescription, productSchema } =
  Astro.props;

const meta = {
  title: `${title} | Products | Loumarc Signs`,
  canonicalURL: `https://loumarcsigns.com/products/${slug.current}/`,
  description: metaDescription,
};

// Add title to product schema object
productSchema ? (productSchema.title = title) : null;
---

<Layout meta={meta} productSchema={productSchema}>
  <Header />
  <div class="section spot-color-gray">
    <svg
      aria-hidden="true"
      class="slant"
      viewBox="0 0 1440 67"
      preserveAspectRatio="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M0,66.398L1440,18.066L1440,0L0,0L0,66.398Z"></path>
    </svg>
    <div class="section__inner region">
      <div class="center">
        <div class="box">
          <h1>New Jersey {title}</h1>
        </div>
      </div>
    </div>
    <svg
      aria-hidden="true"
      class="slant"
      viewBox="0 0 1440 67"
      preserveAspectRatio="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M0,66.398L1440,18.066L1440,0L0,0L0,66.398Z"></path>
    </svg>
  </div>
  <div class="gallery box relative"
  style="margin-top: -5rem; --spot-color: transparent; --padding: 0 var(--space-s) var(--space-s);">
    <div class="grid justify-items-center">
      {
        gallery
          ? gallery.images.map(
              (
                image,
                index
              ) => {
                return (
                  <picture>
                    <source
                      srcset={getVanityURL({
                        imgObj: image,
                        title: title,
                        width: 600,
                        height: 450,
                        format: 'webp',
                        quality: 90,
                        index: index,
                      })}
                      type="image/webp"
                      width="600",
                      height="450",
                      class="h-auto"
                      />
                      <img
                      src={getVanityURL({
                        imgObj: image,
                        title: title,
                        width: 600,
                        height: 450,
                        format: 'jpg',
                        quality: 90,
                        index: index,
                      })}
                      width="600",
                      height="450",
                      class="h-auto"
                      alt={image.alt}
                    />
                  </picture>
                );
              }
            )
          : null
      }
    </div>
  </div>
  <main class="content region flow prose">
    <PortableText portableText={body} />
  </main>
  <article class="content">
    <FormBuilder slug={slug.current} headingContext={title} />
  </article>
</Layout>
