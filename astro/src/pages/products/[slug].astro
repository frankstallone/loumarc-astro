---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import PortableText from '../../components/PortableText.astro';
import FormBuilder from '../../components/FormBuilder.astro';
import { urlForImage } from '../../api/urlForImage';

import { useSanityClient } from 'astro-sanity';

export async function getStaticPaths() {
  const products = await useSanityClient().fetch(`*[_type == "product"]`);

  return products.map((product) => {
    return {
      params: {
        slug: product.slug?.current || '',
      },
      props: { ...product },
    };
  });
}

const { title, body, gallery, slug, metaDescription } = Astro.props;

const meta = {
  title: `${title} | Products | Loumarc Signs`,
  canonicalURL: `https://loumarcsigns.com/products/${slug.current}`,
  description: metaDescription,
};

function createVanityURL() {
  // Converting page title to dashed lowercase string
  const titleToDash = title.toLowerCase().replace(/\s/g, '-');
  // Array of SEO locations
  const seoLocations = [
    'new-jersey',
    'southern-new-jersey',
    'central-new-jersey',
    'northern-new-jersey',
    'near-me',
  ];
  // Randomly select a location from the array
  return `/${titleToDash}-${
    seoLocations[Math.floor(Math.random() * seoLocations.length)]
  }`;
}
---

<Layout meta={meta}>
  <Header />
  <div class="section spot-color-primary">
    <svg
      aria-hidden="true"
      class="slant"
      viewBox="0 0 1440 67"
      preserveAspectRatio="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M0,66.398L1440,18.066L1440,0L0,0L0,66.398Z"></path>
    </svg>
    <div class="section__inner region">
      <div class="center">
        <div class="box">
          <h1>New Jersey {title}</h1>
        </div>
      </div>
    </div>
    <svg
      aria-hidden="true"
      class="slant"
      viewBox="0 0 1440 67"
      preserveAspectRatio="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M0,66.398L1440,18.066L1440,0L0,0L0,66.398Z"></path>
    </svg>
  </div>
  <div class="gallery region box">
    <div class="grid justify-items-center">
      {
        gallery
          ? gallery.images.map(
              (
                image
                // Images to be 4:3 ratio
              ) => {
                // Constructed URL for webp image
                const originalwebpURL = urlForImage(image)
                  .width(600)
                  .height(450)
                  .format('webp')
                  .quality(90)
                  .url();
                // Index of the query string
                const originalwebpURLQueryIndex = originalwebpURL.indexOf('?');
                // New URL with vanity string
                const seowebp =
                  originalwebpURL.slice(0, originalwebpURLQueryIndex) +
                  createVanityURL() +
                  originalwebpURL.slice(originalwebpURLQueryIndex);

                // Constructed URL for jpg image

                const originaljpgURL = urlForImage(image)
                  .width(600)
                  .height(450)
                  .format('jpg')
                  .quality(90)
                  .url();
                // Index of the query string
                const originaljpgURLQueryIndex = originaljpgURL.indexOf('?');

                // New URL with vanity string

                const seojpg =
                  originaljpgURL.slice(0, originaljpgURLQueryIndex) +
                  createVanityURL() +
                  originaljpgURL.slice(originaljpgURLQueryIndex);

                return (
                  <picture>
                    <source srcset={seowebp} type="image/webp" />
                    <img src={seojpg} alt={image.alt} />
                  </picture>
                );
              }
            )
          : null
      }
    </div>
  </div>
  <main class="content region flow prose">
    <PortableText portableText={body} />
  </main>
  <article class="wrapper" data-layout="md">
    <FormBuilder slug={slug.current} headingContext={title} />
  </article>
</Layout>
